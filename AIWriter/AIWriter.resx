<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAANcNAADXDQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAATQAAAFAAAAADAAAAAgAAAE4AAABPAAAAAwAA
        AAMAAABPAAAATwAAAAMAAAADAAAATwAAAE4AAAACAAAAAwAAAFAAAABNAAAAAgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAAADXAAAA2wAAABsAAAAYAAAA2AAA
        ANoAAAAaAAAAGQAAANkAAADZAAAAGQAAABoAAADaAAAA2AAAABgAAAAbAAAA2wAAANcAAAAZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAOMAAADnAAAAIgAA
        AB8AAADkAAAA5gAAACEAAAAgAAAA5QAAAOUAAAAgAAAAIQAAAOYAAADkAAAAHwAAACIAAADnAAAA4wAA
        ACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAA4wAA
        AOcAAAAiAAAAHwAAAOQAAADmAAAAIQAAACAAAADlAAAA5QAAACAAAAAhAAAA5gAAAOQAAAAfAAAAIgAA
        AOcAAADjAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADMAAADoAAAA7wAAAGsAAABpAAAA7QAAAO4AAABqAAAAaQAAAO4AAADuAAAAaQAAAGoAAADuAAAA7QAA
        AGkAAABrAAAA7wAAAOgAAAAzAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABJAAAA0gAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/gAAANIAAABJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAIAAA
        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
        AAD4AAAf/AAAP/wAAD/8AAA//AAAP/wAAD8=
</value>
  </data>
</root>